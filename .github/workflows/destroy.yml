name: destroy
on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      TF_IN_AUTOMATION: "1"
      TF_INPUT: "0"
      TF_VAR_tenancy_ocid:         ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid:            ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint:          ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_region:               ${{ secrets.OCI_REGION }}
      TF_VAR_private_key_pem:      ${{ secrets.OCI_PRIVATE_KEY_PEM }}
      TF_VAR_compartment_ocid:     ${{ secrets.COMPARTMENT_OCID }}
      TF_VAR_availability_domain:  ${{ secrets.AVAILABILITY_DOMAIN }}
      TF_VAR_os_image_id:          ${{ secrets.OS_IMAGE_ID }}
      TF_VAR_cluster_name:         ${{ secrets.CLUSTER_NAME }}
      # ✅ FIX: Corrected typo from 'admin_cidr' to 'admin_cidrs'
      TF_VAR_admin_cidrs:          ${{ secrets.ADMIN_CIDRS }}
      # ✅ FIX: Added missing variable to match plan/apply workflows
      TF_VAR_cloudflare_cidrs:     ${{ secrets.CLOUDFLARE_CIDRS }}
      TF_VAR_public_key_content:   ${{ secrets.SSH_PUBLIC_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="namespace=${{ secrets.OS_NAMESPACE }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ secrets.OCI_REGION }}"

      - name: Terraform destroy
        run: terraform destroy -auto-approve -input=false
