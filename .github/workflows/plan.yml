name: plan
on:
  workflow_dispatch: {}
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      TF_IN_AUTOMATION: "1"
      TF_INPUT: "0"
      
      # --- Single Source of Truth for Authentication ---
      # These environment variables are used by both the backend and the provider.
      OCI_TENANCY_OCID:     ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID:        ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT:      ${{ secrets.OCI_FINGERPRINT }}
      OCI_REGION:           ${{ secrets.OCI_REGION }}
      OCI_PRIVATE_KEY:      ${{ secrets.OCI_PRIVATE_KEY_PEM }}

      # --- Terraform Input Variables ---
      TF_VAR_region:              ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_ocid:    ${{ secrets.COMPARTMENT_OCID }}
      TF_VAR_availability_domain: ${{ secrets.AVAILABILITY_DOMAIN }}
      TF_VAR_os_image_id:         ${{ secrets.OS_IMAGE_ID }}
      TF_VAR_cluster_name:        ${{ secrets.CLUSTER_NAME }}
      TF_VAR_admin_cidr:          ${{ secrets.ADMIN_CIDR }} # This is now a required secret
      TF_VAR_public_key_content:  ${{ secrets.SSH_PUBLIC_KEY }}
      
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Create backend.oci.hcl for Terraform Init
        run: |
          # This file no longer needs authentication details; they are read from the environment.
          cat > backend.oci.hcl <<'HCL'
          bucket           = "${{ secrets.TF_STATE_BUCKET }}"
          namespace        = "${{ secrets.OS_NAMESPACE }}"
          key              = "${{ secrets.TF_STATE_KEY }}"
          workspace_key_prefix = "envs/"
          HCL

      - name: Terraform init (root)
        run: terraform init -backend-config=backend.oci.hcl

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan
          if-no-files-found: error
