name: STORAGE - Destroy

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  storage_destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      TF_IN_AUTOMATION: "1"
      TF_INPUT: "0"

      # Backend + namespace
      TF_VAR_tf_state_bucket: ${{ secrets.TF_STATE_BUCKET }}
      TF_VAR_os_namespace:    ${{ secrets.OS_NAMESPACE }}
      TF_VAR_region:          ${{ secrets.OCI_REGION }}
      TF_VAR_availability_domain: ${{ github.event.inputs.availability_domain || secrets.AVAILABILITY_DOMAIN || '' }}


      # PROVIDER variables expected by infra/storage/providers.tf
      TF_VAR_oci_tenancy_ocid:   ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_oci_user_ocid:      ${{ secrets.OCI_USER_OCID }}
      TF_VAR_oci_fingerprint:    ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_oci_private_key_pem: ${{ secrets.OCI_PRIVATE_KEY_PEM }}
      TF_VAR_oci_region:         ${{ secrets.OCI_REGION }}

      # Other useful defaults (optional)
      TF_VAR_compartment_ocid:   ${{ secrets.COMPARTMENT_OCID }}
    steps:
      - name: Guard required secrets (explicit checks)
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.OCI_TENANCY_OCID }}" ] || \
             [ -z "${{ secrets.OCI_USER_OCID }}" ] || \
             [ -z "${{ secrets.OCI_FINGERPRINT }}" ] || \
             [ -z "${{ secrets.OCI_PRIVATE_KEY_PEM }}" ] || \
             [ -z "${{ secrets.OCI_REGION }}" ] || \
             [ -z "${{ secrets.TF_STATE_BUCKET }}" ] || \
             [ -z "${{ secrets.OS_NAMESPACE }}" ]; then
            echo "::error::One or more required secrets are missing (OCI_TENANCY_OCID, OCI_USER_OCID, OCI_FINGERPRINT, OCI_PRIVATE_KEY_PEM, OCI_REGION, TF_STATE_BUCKET, OS_NAMESPACE)."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1
          terraform_wrapper: false

      - name: Configure OCI Credentials
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.oci"
          umask 077
          echo "${{ secrets.OCI_PRIVATE_KEY_PEM }}" > "$HOME/.oci/oci_api_key.pem"
          cat > "$HOME/.oci/config" <<CFG
          [DEFAULT]
          user=${{ secrets.OCI_USER_OCID }}
          fingerprint=${{ secrets.OCI_FINGERPRINT }}
          tenancy=${{ secrets.OCI_TENANCY_OCID }}
          region=${{ secrets.OCI_REGION }}
          key_file=$HOME/.oci/oci_api_key.pem
          CFG

      - name: Terraform Init (storage backend)
        working-directory: infra/storage
        run: |
          # default storage key (same folder as other states)
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=storage.tfstate" \
            -backend-config="namespace=${{ secrets.OS_NAMESPACE }}" \
            -backend-config="region=${{ secrets.OCI_REGION }}" \
            -reconfigure

      - name: Terraform Destroy (storage)
        working-directory: infra/storage
        run: |
          echo "Running terraform destroy for storage workspace. This will delete the actual block volume in OCI!"
          terraform destroy -auto-approve
