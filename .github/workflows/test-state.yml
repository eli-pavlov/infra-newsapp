name: Test Remote State Creation

on:
  workflow_dispatch: {} # Allows manual triggering

permissions:
  contents: read

jobs:
  test-remote-state:
    runs-on: ubuntu-latest
    env:
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_STATE_KEY: "test-newsapp.tfstate"
      OS_NAMESPACE: ${{ secrets.OS_NAMESPACE }}
      OCI_REGION: ${{ secrets.OCI_REGION }}
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_PRIVATE_KEY_PEM: ${{ secrets.OCI_PRIVATE_KEY_PEM }}
      
    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1

      - name: Create Dummy Terraform Files
        run: |
          # Define the OCI backend (required for init)
          echo 'terraform { backend "oci" {} }' > backend.tf
          
          # Create a minimal resource to generate a state file
          echo 'resource "null_resource" "test_state_creation" {}' > main.tf

      - name: Write OCI Private Key to a temporary file
        run: |
          umask 077 # Set permissions so only the owner can read/write
          echo "${{ secrets.OCI_PRIVATE_KEY_PEM }}" > "$RUNNER_TEMP/oci_api_key.pem"
          echo "OCI_KEY_PATH=$RUNNER_TEMP/oci_api_key.pem" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=$TF_STATE_BUCKET" \
            -backend-config="key=$TF_STATE_KEY" \
            -backend-config="namespace=$OS_NAMESPACE" \
            -backend-config="region=$OCI_REGION" \
            -backend-config="tenancy_ocid=$OCI_TENANCY_OCID" \
            -backend-config="user_ocid=$OCI_USER_OCID" \
            -backend-config="fingerprint=$OCI_FINGERPRINT" \
            -backend-config="private_key_path=${{ env.OCI_KEY_PATH }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Verify State File Creation
        run: echo "âœ… Apply successful. Check the '${TF_STATE_BUCKET}' bucket in OCI for the file '${TF_STATE_KEY}'."
