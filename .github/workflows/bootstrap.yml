name: bootstrap
on:
  workflow_dispatch: {}
  push:
    branches: [main, master]

permissions:
  contents: read

jobs:
  bootstrap-and-debug:
    name: Bootstrap State Bucket and Debug
    runs-on: ubuntu-latest
    env:
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_REGION: ${{ secrets.OCI_REGION }}
      OCI_PRIVATE_KEY_PEM: ${{ secrets.OCI_PRIVATE_KEY_PEM }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      OS_NAMESPACE: ${{ secrets.OS_NAMESPACE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure OCI CLI and Key File
        shell: bash
        run: |
          echo "Setting up OCI CLI configuration..."
          python3 -m pip install --quiet --upgrade pip
          python3 -m pip install --quiet oci-cli
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          
          mkdir -p "$HOME/.oci"
          umask 077
          
          # This command writes the multi-line secret to a file.
          # The format of the secret in GitHub settings is CRITICAL.
          echo "${{ env.OCI_PRIVATE_KEY_PEM }}" > "$HOME/.oci/oci_api_key.pem"
          
          cat > "$HOME/.oci/config" <<CFG
          [DEFAULT]
          user=${{ env.OCI_USER_OCID }}
          fingerprint=${{ env.OCI_FINGERPRINT }}
          key_file=$HOME/.oci/oci_api_key.pem
          tenancy=${{ env.OCI_TENANCY_OCID }}
          region=${{ env.OCI_REGION }}
          CFG

      # ================== NEW DEBUGGING STEP ==================
      - name: Validate Private Key Format
        shell: bash
        run: |
          echo "--- Checking key file content with visible line endings ($) ---"
          cat -A "$HOME/.oci/oci_api_key.pem"
          echo
          echo "--- Validating key format with OpenSSL ---"
          openssl rsa -in "$HOME/.oci/oci_api_key.pem" -check -noout
          echo "âœ… OpenSSL validation successful. The key format is correct."
      # ==========================================================

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init & Apply (bootstrap/state-bucket)
        working-directory: bootstrap/state-bucket
        env:
          TF_VAR_region: ${{ env.OCI_REGION }}
          TF_VAR_tenancy_ocid: ${{ env.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ env.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ env.OCI_FINGERPRINT }}
          TF_VAR_private_key_pem: ${{ env.OCI_PRIVATE_KEY_PEM }}
          TF_VAR_compartment_ocid: ${{ secrets.COMPARTMENT_OCID }}
          TF_VAR_bucket_name: ${{ env.TF_STATE_BUCKET }}
          TF_VAR_os_namespace: ${{ env.OS_NAMESPACE }}
        run: |
          terraform init -upgrade
          terraform apply -auto-approve