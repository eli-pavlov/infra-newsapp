name: bootstrap
on:
  workflow_dispatch: {}
  push:
    branches: [main, master]

permissions:
  contents: read

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    env:
      # Provider & backend auth use these:
      OCI_TENANCY_OCID:   ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID:      ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT:    ${{ secrets.OCI_FINGERPRINT }}
      OCI_REGION:         ${{ secrets.OCI_REGION }}
      OCI_PRIVATE_KEY_PATH: ${{ runner.temp }}/oci_api_key.pem
    steps:
      - uses: actions/checkout@v4

      - name: Guard required secrets
        shell: bash
        run: |
          set -euo pipefail
          for s in OCI_TENANCY_OCID OCI_USER_OCID OCI_FINGERPRINT OCI_REGION OCI_PRIVATE_KEY_PEM TF_STATE_BUCKET OS_NAMESPACE; do
            [[ -n "${{ secrets[$s] }}" ]] || { echo "::error::Missing secret: $s"; exit 1; }
          done

      - name: Write OCI key (PEM) to runner
        shell: bash
        run: |
          umask 077
          printf '%s' "${{ secrets.OCI_PRIVATE_KEY_PEM }}" > "$RUNNER_TEMP/oci_api_key.pem"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Verify Terraform
        run: terraform -version

      - name: Terraform init (bootstrap/state-bucket)
        working-directory: bootstrap/state-bucket
        # Only module input vars need TF_VAR_*
        env:
          TF_VAR_region:            ${{ env.OCI_REGION }}
          TF_VAR_tenancy_ocid:      ${{ env.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid:         ${{ env.OCI_USER_OCID }}
          TF_VAR_fingerprint:       ${{ env.OCI_FINGERPRINT }}
          TF_VAR_private_key_path:  ${{ env.OCI_PRIVATE_KEY_PATH }}
          TF_VAR_compartment_ocid:  ${{ secrets.COMPARTMENT_OCID }}
          TF_VAR_bucket_name:       ${{ secrets.TF_STATE_BUCKET }}
          TF_VAR_os_namespace:      ${{ secrets.OS_NAMESPACE }}
        run: terraform init -upgrade

      - name: Terraform apply (bootstrap/state-bucket)
        working-directory: bootstrap/state-bucket
        env:
          TF_VAR_region:            ${{ env.OCI_REGION }}
          TF_VAR_tenancy_ocid:      ${{ env.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid:         ${{ env.OCI_USER_OCID }}
          TF_VAR_fingerprint:       ${{ env.OCI_FINGERPRINT }}
          TF_VAR_private_key_path:  ${{ env.OCI_PRIVATE_KEY_PATH }}
          TF_VAR_compartment_ocid:  ${{ secrets.COMPARTMENT_OCID }}
          TF_VAR_bucket_name:       ${{ secrets.TF_STATE_BUCKET }}
          TF_VAR_os_namespace:      ${{ secrets.OS_NAMESPACE }}
        run: terraform apply -auto-approve
